name: actions
on:
  push:
    paths:
      - 'update.sh'
      - '.github/workflows/actions.yml'
  schedule:
    - cron: '0 0 15 * *'
  workflow_dispatch:

env:
  DEBIAN_FRONTEND: 'noninteractive'
  BOOTSTRAP_VERSION: 'v000'
  DOCKER_REPO: 'polyarch/debian-ports'
  DOCKER_REG: 'docker.io/'
  QEMU_VER: 'v9.0.2-2'
  OS: 'linux'
  VERSION: 'sid'

jobs:
  docker-build-ports:
    runs-on: ubuntu-latest
    env:
      MIRROR: 'https://deb.debian.org/debian-ports'
    strategy:
      fail-fast: false
      matrix:
        UNAME_ARCH: [hppa, loong64, m68k, ppc, ppc64, sh4, sparc64]
        include:
          - {ARCH: hppa,        QEMU_ARCH: hppa,        UNAME_ARCH: hppa}
          - {ARCH: loong64,     QEMU_ARCH: loongarch64, UNAME_ARCH: loong64}
          - {ARCH: m68k,        QEMU_ARCH: m68k,        UNAME_ARCH: m68k}
          - {ARCH: powerpc,     QEMU_ARCH: ppc,         UNAME_ARCH: ppc}
          - {ARCH: ppc64,       QEMU_ARCH: ppc64,       UNAME_ARCH: ppc64}
          - {ARCH: sh4,         QEMU_ARCH: sh4,         UNAME_ARCH: sh4}
          - {ARCH: sparc64,     QEMU_ARCH: sparc64,     UNAME_ARCH: sparc64}
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          sudo apt update && sudo apt install -y qemu-user-static debootstrap
          ./update.sh -a ${{ matrix.ARCH }} -b ${BOOTSTRAP_VERSION} -v ${VERSION} -q ${{ matrix.QEMU_ARCH }} -u ${QEMU_VER} -d ${DOCKER_REPO} -o ${{ matrix.UNAME_ARCH }} -m ${MIRROR}
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish Docker images
        if: github.ref == 'refs/heads/main'
        run: |
          docker push -a ${DOCKER_REPO}

  docker-build:
    runs-on: ubuntu-latest
    env:
      MIRROR: 'https://deb.debian.org/debian'
    strategy:
      fail-fast: false
      matrix:
        UNAME_ARCH: [amd64, arm32v5, arm32v7, arm64v8, i386, mips64le, ppc64le, riscv64, s390x]
        include:
          - {ARCH: amd64,       QEMU_ARCH: amd64,       UNAME_ARCH: amd64}
          - {ARCH: arm32v5,     QEMU_ARCH: arm32v5,     UNAME_ARCH: armv7l}
          - {ARCH: arm32v7,     QEMU_ARCH: arm32v7,     UNAME_ARCH: armv7l}
          - {ARCH: arm64v8,     QEMU_ARCH: arm64v8,     UNAME_ARCH: aarch64}
          - {ARCH: i386,        QEMU_ARCH: i386,        UNAME_ARCH: x86_64}
          - {ARCH: mips64le,    QEMU_ARCH: mips64el,    UNAME_ARCH: mips64}
          - {ARCH: ppc64le,     QEMU_ARCH: ppc64le,     UNAME_ARCH: ppc64le}
          - {ARCH: riscv64,     QEMU_ARCH: riscv64,     UNAME_ARCH: riscv64}
          - {ARCH: s390x,       QEMU_ARCH: s390x,       UNAME_ARCH: s390x}
    steps:
      - uses: actions/checkout@v4
      - name: Build
        run: |
          sudo apt update && sudo apt install -y qemu-user-static debootstrap
          ./update.sh -a ${{ matrix.ARCH }} -b ${BOOTSTRAP_VERSION} -v ${VERSION} -q ${{ matrix.QEMU_ARCH }} -u ${QEMU_VER} -d ${DOCKER_REPO} -o ${{ matrix.UNAME_ARCH }} -m ${MIRROR}
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Publish Docker images
        if: github.ref == 'refs/heads/main'
        run: |
          docker push -a ${DOCKER_REPO}

  docker-combine:
    needs: docker-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
    steps:
      - uses: actions/checkout@v4
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Combine into One Big Union for this version
        run: |
           docker manifest create ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION} \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}-${OS}-hppa \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}-${OS}-loong64 \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}-${OS}-m68k \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}-${OS}-powerpc \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}-${OS}-ppc64 \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}-${OS}-sh4 \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}-${OS}-sparc64
      - name: Inspect the combination for this version
        run: |
            docker manifest inspect -v ${DOCKER_REPO}:${BOOTSTRAP_VERSION}
      - name: Combine into One Big Union for latest
        run: |
           docker manifest create ${DOCKER_REG}${DOCKER_REPO}:latest \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:latest-${OS}-hppa \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:latest-${OS}-loong64 \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:latest-${OS}-m68k \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:latest-${OS}-powerpc \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:latest-${OS}-ppc64 \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:latest-${OS}-sh4 \
                  --amend ${DOCKER_REG}${DOCKER_REPO}:latest-${OS}-sparc64
      - name: Inspect the combination for latest
        run: |
            docker manifest inspect -v ${DOCKER_REPO}:latest
      - name: Publish Docker polyarch manifest for this version
        if: github.ref == 'refs/heads/main'
        run: |
          docker manifest push ${DOCKER_REG}${DOCKER_REPO}:${BOOTSTRAP_VERSION}
      - name: Publish Docker polyarch manifest for latest
        if: github.ref == 'refs/heads/main'
        run: |
          docker manifest push ${DOCKER_REG}${DOCKER_REPO}:latest
